COMPONENTS
-The HEART of React is Components
-Official React Docs states: Components let you splut the UI into independent, reusable pieces, and think
 about each piece in isolation
-Components give both Function and Presentation in modular forms
-Predictable packages to keep organization of code that describe what should be rendered on to DOM

REACT APPLICATION EXAMPLE
-This example isn't 100% correctly used BUT it's just to simplify for myself
-A Song application that displays attributes of the song
1. Write the components
class Songs extends React.Component {
  render() {
    return (
      <div>
        Song Title Un - Artist Un
        Song Title Deux - Artist Deux
        Song Title Trois - Artist Trois
      </div>
    )
  }
}

class SongDetails extends React.Component {
  render () {
    return (
      <div>
        Song Un Details - Title, Artist, Year, Length, Genre
        Song Deux Details - Title, Artist, Year, Length, Genre
        Song Trois Details - Title, Artist, Year, Length, Genre
      <div>
    )
  }
}

-Class: New class Song is declared
-React.Component: Song class extends React's Component class which provides built in methods/attributes
-render(): A method defining what should be explicitly returned

2. Use the components
-Make sure the Components are rendered within the App Component which is the MAIN/PARENT component
class App extends React.Component {
  render() {
    return (
      <div>
        <Songs />
        <SongDetails />
      </div>
    )
  }
}
